package expo.modules.image;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 2, d1 = {"\u0000\"\n\u0000\n\u0002\u0010\u0007\n\u0002\b\u0004\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\u001a2\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u00012\u0006\u0010\u0003\u001a\u00020\u00012\u0006\u0010\u0004\u001a\u00020\u00012\b\b\u0002\u0010\u0005\u001a\u00020\u00062\b\b\u0002\u0010\u0007\u001a\u00020\u0006\u001a2\u0010\b\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u00012\u0006\u0010\t\u001a\u00020\n2\u0006\u0010\u000b\u001a\u00020\n2\b\b\u0002\u0010\u0005\u001a\u00020\u00062\b\b\u0002\u0010\u0007\u001a\u00020\u0006\u001a2\u0010\f\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u00012\u0006\u0010\t\u001a\u00020\n2\u0006\u0010\u000b\u001a\u00020\n2\b\b\u0002\u0010\u0005\u001a\u00020\u00062\b\b\u0002\u0010\u0007\u001a\u00020\u0006\u001a!\u0010\r\u001a\u0002H\u000e\"\u0004\b\u0000\u0010\u000e*\b\u0012\u0004\u0012\u0002H\u000e0\u000fH\u0080@\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\u0010\u0082\u0002\u0004\n\u0002\b\u0019\u00a8\u0006\u0011"}, d2 = {"calcTranslation", "", "value", "imageRefValue", "viewRefValue", "isPercentage", "", "isReverse", "calcXTranslation", "imageRect", "Landroid/graphics/RectF;", "viewRect", "calcYTranslation", "awaitGet", "T", "Lcom/bumptech/glide/request/FutureTarget;", "(Lcom/bumptech/glide/request/FutureTarget;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "expo-image_debug"})
public final class ImageUtilsKt {
    
    /**
     * Converts blocking [java.util.concurrent.Future] result into non-blocking suspend function.
     */
    @org.jetbrains.annotations.Nullable
    public static final <T extends java.lang.Object>java.lang.Object awaitGet(@org.jetbrains.annotations.NotNull
    com.bumptech.glide.request.FutureTarget<T> $this$awaitGet, @org.jetbrains.annotations.NotNull
    kotlin.coroutines.Continuation<? super T> p1) {
        return null;
    }
    
    public static final float calcXTranslation(float value, @org.jetbrains.annotations.NotNull
    android.graphics.RectF imageRect, @org.jetbrains.annotations.NotNull
    android.graphics.RectF viewRect, boolean isPercentage, boolean isReverse) {
        return 0.0F;
    }
    
    public static final float calcYTranslation(float value, @org.jetbrains.annotations.NotNull
    android.graphics.RectF imageRect, @org.jetbrains.annotations.NotNull
    android.graphics.RectF viewRect, boolean isPercentage, boolean isReverse) {
        return 0.0F;
    }
    
    public static final float calcTranslation(float value, float imageRefValue, float viewRefValue, boolean isPercentage, boolean isReverse) {
        return 0.0F;
    }
}