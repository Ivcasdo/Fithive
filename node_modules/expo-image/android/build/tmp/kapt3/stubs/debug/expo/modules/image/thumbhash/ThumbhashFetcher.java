package expo.modules.image.thumbhash;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u00008\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\u0018\u00002\b\u0012\u0004\u0012\u00020\u00020\u0001B\u000f\u0012\b\u0010\u0003\u001a\u0004\u0018\u00010\u0004\u00a2\u0006\u0002\u0010\u0005J\b\u0010\u0006\u001a\u00020\u0007H\u0016J\b\u0010\b\u001a\u00020\u0007H\u0016J\u000e\u0010\t\u001a\b\u0012\u0004\u0012\u00020\u00020\nH\u0016J\b\u0010\u000b\u001a\u00020\fH\u0016J \u0010\r\u001a\u00020\u00072\u0006\u0010\u000e\u001a\u00020\u000f2\u000e\u0010\u0010\u001a\n\u0012\u0006\b\u0000\u0012\u00020\u00020\u0011H\u0016R\u0010\u0010\u0003\u001a\u0004\u0018\u00010\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0012"}, d2 = {"Lexpo/modules/image/thumbhash/ThumbhashFetcher;", "Lcom/bumptech/glide/load/data/DataFetcher;", "Landroid/graphics/Bitmap;", "thumbhash", "", "(Ljava/lang/String;)V", "cancel", "", "cleanup", "getDataClass", "Ljava/lang/Class;", "getDataSource", "Lcom/bumptech/glide/load/DataSource;", "loadData", "priority", "Lcom/bumptech/glide/Priority;", "callback", "Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;", "expo-image_debug"})
public final class ThumbhashFetcher implements com.bumptech.glide.load.data.DataFetcher<android.graphics.Bitmap> {
    private final java.lang.String thumbhash = null;
    
    public ThumbhashFetcher(@org.jetbrains.annotations.Nullable
    java.lang.String thumbhash) {
        super();
    }
    
    @java.lang.Override
    public void cleanup() {
    }
    
    @java.lang.Override
    public void cancel() {
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.lang.Class<android.graphics.Bitmap> getDataClass() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public com.bumptech.glide.load.DataSource getDataSource() {
        return null;
    }
    
    @java.lang.Override
    public void loadData(@org.jetbrains.annotations.NotNull
    com.bumptech.glide.Priority priority, @org.jetbrains.annotations.NotNull
    com.bumptech.glide.load.data.DataFetcher.DataCallback<? super android.graphics.Bitmap> callback) {
    }
}