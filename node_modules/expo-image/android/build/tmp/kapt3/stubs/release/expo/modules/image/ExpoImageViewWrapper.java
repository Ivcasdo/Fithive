package expo.modules.image;

import java.lang.System;

@android.annotation.SuppressLint(value = {"ViewConstructor"})
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u00f0\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\b\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0010\u0011\n\u0002\u0018\u0002\n\u0002\u0010\u0007\n\u0002\b\u0002\n\u0002\u0010\u0014\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010 \n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u000e\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0013\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0007\u0018\u0000 \u00b0\u00012\u00020\u0001:\u0002\u00b0\u0001B\u0015\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\u0002\u0010\u0006J.\u0010\u0093\u0001\u001a\u00020c2\u0007\u0010\u0094\u0001\u001a\u00020\u00152\u0007\u0010\u0095\u0001\u001a\u00020N2\b\u0010\u0096\u0001\u001a\u00030\u0097\u00012\u0007\u0010\u0098\u0001\u001a\u00020\u000eH\u0002J\u0012\u0010\u0099\u0001\u001a\u00020c2\u0007\u0010\u0094\u0001\u001a\u00020\u0015H\u0002J\n\u0010\u009a\u0001\u001a\u00030\u009b\u0001H\u0002J\u0019\u0010+\u001a\u0004\u0018\u00010\'2\r\u0010\u0086\u0001\u001a\b\u0012\u0004\u0012\u00020\'0nH\u0002J%\u0010\u009c\u0001\u001a\u00020\u000e2\u0007\u0010\u0095\u0001\u001a\u00020N2\b\u0010\u0096\u0001\u001a\u00030\u0097\u00012\t\b\u0002\u0010\u0098\u0001\u001a\u00020\u000eJ-\u0010\u009d\u0001\u001a\u00020c2\u0007\u0010\u009e\u0001\u001a\u00020\u001f2\u0007\u0010\u009f\u0001\u001a\u00020\u001f2\u0007\u0010\u00a0\u0001\u001a\u00020\u001f2\u0007\u0010\u00a1\u0001\u001a\u00020\u001fH\u0014J\u0007\u0010\u00a2\u0001\u001a\u00020cJ\u001a\u0010\u00a3\u0001\u001a\u00020c2\t\b\u0002\u0010\u00a4\u0001\u001a\u00020\u000eH\u0000\u00a2\u0006\u0003\b\u00a5\u0001J\"\u0010\u00a6\u0001\u001a\u00020c2\u0007\u0010\u00a7\u0001\u001a\u00020\u001f2\u0007\u0010\u00a8\u0001\u001a\u0002022\u0007\u0010\u00a9\u0001\u001a\u000202J\u0019\u0010\u00aa\u0001\u001a\u00020c2\u0007\u0010\u00a7\u0001\u001a\u00020\u001f2\u0007\u0010\u00ab\u0001\u001a\u000202J\u0019\u0010\u00ac\u0001\u001a\u00020c2\u0007\u0010\u00a7\u0001\u001a\u00020\u001f2\u0007\u0010\u00ad\u0001\u001a\u000202J\u001b\u0010\u00ae\u0001\u001a\u00020c2\b\u0010\u0094\u0001\u001a\u00030\u00af\u00012\u0006\u0010\u0007\u001a\u00020\u000eH\u0002R(\u0010\t\u001a\u0004\u0018\u00010\b2\b\u0010\u0007\u001a\u0004\u0018\u00010\b@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\n\u0010\u000b\"\u0004\b\f\u0010\rR$\u0010\u000f\u001a\u00020\u000e2\u0006\u0010\u0007\u001a\u00020\u000e@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u0010\u0010\u0011\"\u0004\b\u0012\u0010\u0013R\u0014\u0010\u0014\u001a\u00020\u00158BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0016\u0010\u0017R\u0014\u0010\u0018\u001a\u00020\u00198BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b\u001a\u0010\u001bR$\u0010\u001c\u001a\u00020\u000e2\u0006\u0010\u0007\u001a\u00020\u000e@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\u001d\u0010\u0011\"\u0004\b\u001e\u0010\u0013R*\u0010 \u001a\u0004\u0018\u00010\u001f2\b\u0010\u0007\u001a\u0004\u0018\u00010\u001f@@X\u0080\u000e\u00a2\u0006\u0010\n\u0002\u0010%\u001a\u0004\b!\u0010\"\"\u0004\b#\u0010$R\u0016\u0010&\u001a\u0004\u0018\u00010\'8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b(\u0010)R\u0016\u0010*\u001a\u0004\u0018\u00010\'8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b+\u0010)R*\u0010,\u001a\u0004\u0018\u00010\u001f2\b\u0010\u0007\u001a\u0004\u0018\u00010\u001f@@X\u0080\u000e\u00a2\u0006\u0010\n\u0002\u0010%\u001a\u0004\b-\u0010\"\"\u0004\b.\u0010$R\"\u0010/\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u000202\u0012\u0004\u0012\u0002020100X\u0082\u000e\u00a2\u0006\u0004\n\u0002\u00103R\u000e\u00104\u001a\u000205X\u0082\u000e\u00a2\u0006\u0002\n\u0000R(\u00106\u001a\u0004\u0018\u00010\b2\b\u0010\u0007\u001a\u0004\u0018\u00010\b@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b7\u0010\u000b\"\u0004\b8\u0010\rR\u000e\u00109\u001a\u000205X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u001a\u0010:\u001a\u00020;X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b<\u0010=\"\u0004\b>\u0010?R\u000e\u0010@\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R$\u0010B\u001a\u00020A2\u0006\u0010\u0007\u001a\u00020A@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bC\u0010D\"\u0004\bE\u0010FR$\u0010H\u001a\u00020G2\u0006\u0010\u0007\u001a\u00020G@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bI\u0010J\"\u0004\bK\u0010LR\u000e\u0010M\u001a\u00020NX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010O\u001a\u00020\u0015X\u0082\u0004\u00a2\u0006\u0002\n\u0000R$\u0010P\u001a\u00020\u000e2\u0006\u0010\u0007\u001a\u00020\u000e@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bQ\u0010\u0011\"\u0004\bR\u0010\u0013R\u0010\u0010S\u001a\u0004\u0018\u00010TX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010U\u001a\u00020VX\u0082\u0004\u00a2\u0006\u0002\n\u0000R!\u0010W\u001a\b\u0012\u0004\u0012\u00020Y0X8@X\u0080\u0084\u0002\u00a2\u0006\f\n\u0004\b\\\u0010]\u001a\u0004\bZ\u0010[R!\u0010^\u001a\b\u0012\u0004\u0012\u00020_0X8@X\u0080\u0084\u0002\u00a2\u0006\f\n\u0004\ba\u0010]\u001a\u0004\b`\u0010[R!\u0010b\u001a\b\u0012\u0004\u0012\u00020c0X8@X\u0080\u0084\u0002\u00a2\u0006\f\n\u0004\be\u0010]\u001a\u0004\bd\u0010[R!\u0010f\u001a\b\u0012\u0004\u0012\u00020g0X8@X\u0080\u0084\u0002\u00a2\u0006\f\n\u0004\bi\u0010]\u001a\u0004\bh\u0010[R$\u0010j\u001a\u00020A2\u0006\u0010\u0007\u001a\u00020A@@X\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bk\u0010D\"\u0004\bl\u0010FR \u0010m\u001a\b\u0012\u0004\u0012\u00020\'0nX\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bo\u0010p\"\u0004\bq\u0010rR\u001a\u0010s\u001a\u00020tX\u0080\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\bu\u0010v\"\u0004\bw\u0010xR\u000e\u0010y\u001a\u00020zX\u0082\u0004\u00a2\u0006\u0002\n\u0000R(\u0010{\u001a\u0004\u0018\u00010\b2\b\u0010\u0007\u001a\u0004\u0018\u00010\b@FX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b|\u0010\u000b\"\u0004\b}\u0010\rR\u0019\u0010~\u001a\u00020\u007fX\u0080\u0004\u00a2\u0006\r\n\u0003\b\u0082\u0001\u001a\u0006\b\u0080\u0001\u0010\u0081\u0001R\u000f\u0010\u0083\u0001\u001a\u00020NX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000f\u0010\u0084\u0001\u001a\u00020\u0015X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000f\u0010\u0085\u0001\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R#\u0010\u0086\u0001\u001a\b\u0012\u0004\u0012\u00020\'0nX\u0080\u000e\u00a2\u0006\u0010\n\u0000\u001a\u0005\b\u0087\u0001\u0010p\"\u0005\b\u0088\u0001\u0010rR-\u0010\u0089\u0001\u001a\u0004\u0018\u00010\u001f2\b\u0010\u0007\u001a\u0004\u0018\u00010\u001f@@X\u0080\u000e\u00a2\u0006\u0012\n\u0002\u0010%\u001a\u0005\b\u008a\u0001\u0010\"\"\u0005\b\u008b\u0001\u0010$R\u000f\u0010\u008c\u0001\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\"\u0010\u008d\u0001\u001a\u0005\u0018\u00010\u008e\u0001X\u0080\u000e\u00a2\u0006\u0012\n\u0000\u001a\u0006\b\u008f\u0001\u0010\u0090\u0001\"\u0006\b\u0091\u0001\u0010\u0092\u0001\u00a8\u0006\u00b1\u0001"}, d2 = {"Lexpo/modules/image/ExpoImageViewWrapper;", "Lexpo/modules/kotlin/views/ExpoView;", "context", "Landroid/content/Context;", "appContext", "Lexpo/modules/kotlin/AppContext;", "(Landroid/content/Context;Lexpo/modules/kotlin/AppContext;)V", "value", "", "accessibilityLabel", "getAccessibilityLabel$expo_image_release", "()Ljava/lang/String;", "setAccessibilityLabel$expo_image_release", "(Ljava/lang/String;)V", "", "accessible", "getAccessible$expo_image_release", "()Z", "setAccessible$expo_image_release", "(Z)V", "activeView", "Lexpo/modules/image/ExpoImageView;", "getActiveView", "()Lexpo/modules/image/ExpoImageView;", "activity", "Landroid/app/Activity;", "getActivity", "()Landroid/app/Activity;", "allowDownscaling", "getAllowDownscaling$expo_image_release", "setAllowDownscaling$expo_image_release", "", "backgroundColor", "getBackgroundColor$expo_image_release", "()Ljava/lang/Integer;", "setBackgroundColor$expo_image_release", "(Ljava/lang/Integer;)V", "Ljava/lang/Integer;", "bestPlaceholder", "Lexpo/modules/image/records/SourceMap;", "getBestPlaceholder", "()Lexpo/modules/image/records/SourceMap;", "bestSource", "getBestSource", "blurRadius", "getBlurRadius$expo_image_release", "setBlurRadius$expo_image_release", "borderColor", "", "Lkotlin/Pair;", "", "[Lkotlin/Pair;", "borderRadius", "", "borderStyle", "getBorderStyle$expo_image_release", "setBorderStyle$expo_image_release", "borderWidth", "cachePolicy", "Lexpo/modules/image/records/CachePolicy;", "getCachePolicy$expo_image_release", "()Lexpo/modules/image/records/CachePolicy;", "setCachePolicy$expo_image_release", "(Lexpo/modules/image/records/CachePolicy;)V", "clearViewBeforeChangingSource", "Lexpo/modules/image/enums/ContentFit;", "contentFit", "getContentFit$expo_image_release", "()Lexpo/modules/image/enums/ContentFit;", "setContentFit$expo_image_release", "(Lexpo/modules/image/enums/ContentFit;)V", "Lexpo/modules/image/records/ContentPosition;", "contentPosition", "getContentPosition$expo_image_release", "()Lexpo/modules/image/records/ContentPosition;", "setContentPosition$expo_image_release", "(Lexpo/modules/image/records/ContentPosition;)V", "firstTarget", "Lexpo/modules/image/ImageViewWrapperTarget;", "firstView", "isFocusableProp", "isFocusableProp$expo_image_release", "setFocusableProp$expo_image_release", "loadedSource", "Lexpo/modules/image/GlideModel;", "mainHandler", "Landroid/os/Handler;", "onError", "Lexpo/modules/kotlin/viewevent/ViewEventCallback;", "Lexpo/modules/image/records/ImageErrorEvent;", "getOnError$expo_image_release", "()Lexpo/modules/kotlin/viewevent/ViewEventCallback;", "onError$delegate", "Lexpo/modules/kotlin/viewevent/ViewEventDelegate;", "onLoad", "Lexpo/modules/image/records/ImageLoadEvent;", "getOnLoad$expo_image_release", "onLoad$delegate", "onLoadStart", "", "getOnLoadStart$expo_image_release", "onLoadStart$delegate", "onProgress", "Lexpo/modules/image/records/ImageProgressEvent;", "getOnProgress$expo_image_release", "onProgress$delegate", "placeholderContentFit", "getPlaceholderContentFit$expo_image_release", "setPlaceholderContentFit$expo_image_release", "placeholders", "", "getPlaceholders$expo_image_release", "()Ljava/util/List;", "setPlaceholders$expo_image_release", "(Ljava/util/List;)V", "priority", "Lexpo/modules/image/enums/Priority;", "getPriority$expo_image_release", "()Lexpo/modules/image/enums/Priority;", "setPriority$expo_image_release", "(Lexpo/modules/image/enums/Priority;)V", "progressListener", "Lexpo/modules/image/events/OkHttpProgressListener;", "recyclingKey", "getRecyclingKey", "setRecyclingKey", "requestManager", "Lcom/bumptech/glide/RequestManager;", "getRequestManager$expo_image_release", "()Lcom/bumptech/glide/RequestManager;", "requestManager$1", "secondTarget", "secondView", "shouldRerender", "sources", "getSources$expo_image_release", "setSources$expo_image_release", "tintColor", "getTintColor$expo_image_release", "setTintColor$expo_image_release", "transformationMatrixChanged", "transition", "Lexpo/modules/image/records/ImageTransition;", "getTransition$expo_image_release", "()Lexpo/modules/image/records/ImageTransition;", "setTransition$expo_image_release", "(Lexpo/modules/image/records/ImageTransition;)V", "configureView", "view", "target", "resource", "Landroid/graphics/drawable/Drawable;", "isPlaceholder", "copyProps", "createPropOptions", "Lcom/bumptech/glide/request/RequestOptions;", "onResourceReady", "onSizeChanged", "w", "h", "oldw", "oldh", "onViewDestroys", "rerenderIfNeeded", "shouldRerenderBecauseOfResize", "rerenderIfNeeded$expo_image_release", "setBorderColor", "index", "rgb", "alpha", "setBorderRadius", "radius", "setBorderWidth", "width", "setIsScreenReaderFocusable", "Landroid/view/View;", "Companion", "expo-image_release"})
public final class ExpoImageViewWrapper extends expo.modules.kotlin.views.ExpoView {
    @org.jetbrains.annotations.NotNull
    private final com.bumptech.glide.RequestManager requestManager$1 = null;
    private final expo.modules.image.events.OkHttpProgressListener progressListener = null;
    private final expo.modules.image.ExpoImageView firstView = null;
    private final expo.modules.image.ExpoImageView secondView = null;
    private final android.os.Handler mainHandler = null;
    private expo.modules.image.ImageViewWrapperTarget firstTarget;
    private expo.modules.image.ImageViewWrapperTarget secondTarget;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.kotlin.viewevent.ViewEventDelegate onLoadStart$delegate = null;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.kotlin.viewevent.ViewEventDelegate onProgress$delegate = null;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.kotlin.viewevent.ViewEventDelegate onError$delegate = null;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.kotlin.viewevent.ViewEventDelegate onLoad$delegate = null;
    @org.jetbrains.annotations.NotNull
    private java.util.List<expo.modules.image.records.SourceMap> sources;
    @org.jetbrains.annotations.NotNull
    private java.util.List<expo.modules.image.records.SourceMap> placeholders;
    @org.jetbrains.annotations.Nullable
    private java.lang.Integer blurRadius;
    @org.jetbrains.annotations.Nullable
    private expo.modules.image.records.ImageTransition transition;
    @org.jetbrains.annotations.NotNull
    private expo.modules.image.enums.ContentFit contentFit = expo.modules.image.enums.ContentFit.Cover;
    @org.jetbrains.annotations.NotNull
    private expo.modules.image.enums.ContentFit placeholderContentFit = expo.modules.image.enums.ContentFit.ScaleDown;
    @org.jetbrains.annotations.NotNull
    private expo.modules.image.records.ContentPosition contentPosition;
    @org.jetbrains.annotations.Nullable
    private java.lang.String borderStyle;
    @org.jetbrains.annotations.Nullable
    private java.lang.Integer backgroundColor;
    @org.jetbrains.annotations.Nullable
    private java.lang.Integer tintColor;
    private boolean isFocusableProp = false;
    private boolean accessible = false;
    @org.jetbrains.annotations.Nullable
    private java.lang.String accessibilityLabel;
    @org.jetbrains.annotations.Nullable
    private java.lang.String recyclingKey;
    private boolean allowDownscaling = true;
    @org.jetbrains.annotations.NotNull
    private expo.modules.image.enums.Priority priority = expo.modules.image.enums.Priority.NORMAL;
    @org.jetbrains.annotations.NotNull
    private expo.modules.image.records.CachePolicy cachePolicy = expo.modules.image.records.CachePolicy.DISK;
    private float[] borderRadius;
    private float[] borderWidth;
    private kotlin.Pair<java.lang.Float, java.lang.Float>[] borderColor;
    
    /**
     * Whether the image should be loaded again
     */
    private boolean shouldRerender = false;
    
    /**
     * Currently loaded source
     */
    private expo.modules.image.GlideModel loadedSource;
    
    /**
     * Whether the transformation matrix should be reapplied
     */
    private boolean transformationMatrixChanged = false;
    
    /**
     * Whether the view content should be cleared to blank when the source was changed.
     */
    private boolean clearViewBeforeChangingSource = false;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.image.ExpoImageViewWrapper.Companion Companion = null;
    private static com.bumptech.glide.RequestManager requestManager;
    private static java.lang.ref.WeakReference<expo.modules.kotlin.AppContext> appContextRef;
    private static java.lang.ref.WeakReference<android.app.Activity> activityRef;
    
    public ExpoImageViewWrapper(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.kotlin.AppContext appContext) {
        super(null, null);
    }
    
    private final android.app.Activity getActivity() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final com.bumptech.glide.RequestManager getRequestManager$expo_image_release() {
        return null;
    }
    
    private final expo.modules.image.ExpoImageView getActiveView() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.kotlin.viewevent.ViewEventCallback<kotlin.Unit> getOnLoadStart$expo_image_release() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.kotlin.viewevent.ViewEventCallback<expo.modules.image.records.ImageProgressEvent> getOnProgress$expo_image_release() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.kotlin.viewevent.ViewEventCallback<expo.modules.image.records.ImageErrorEvent> getOnError$expo_image_release() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.kotlin.viewevent.ViewEventCallback<expo.modules.image.records.ImageLoadEvent> getOnLoad$expo_image_release() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.util.List<expo.modules.image.records.SourceMap> getSources$expo_image_release() {
        return null;
    }
    
    public final void setSources$expo_image_release(@org.jetbrains.annotations.NotNull
    java.util.List<expo.modules.image.records.SourceMap> p0) {
    }
    
    private final expo.modules.image.records.SourceMap getBestSource() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.util.List<expo.modules.image.records.SourceMap> getPlaceholders$expo_image_release() {
        return null;
    }
    
    public final void setPlaceholders$expo_image_release(@org.jetbrains.annotations.NotNull
    java.util.List<expo.modules.image.records.SourceMap> p0) {
    }
    
    private final expo.modules.image.records.SourceMap getBestPlaceholder() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.Integer getBlurRadius$expo_image_release() {
        return null;
    }
    
    public final void setBlurRadius$expo_image_release(@org.jetbrains.annotations.Nullable
    java.lang.Integer value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.image.records.ImageTransition getTransition$expo_image_release() {
        return null;
    }
    
    public final void setTransition$expo_image_release(@org.jetbrains.annotations.Nullable
    expo.modules.image.records.ImageTransition p0) {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.enums.ContentFit getContentFit$expo_image_release() {
        return null;
    }
    
    public final void setContentFit$expo_image_release(@org.jetbrains.annotations.NotNull
    expo.modules.image.enums.ContentFit value) {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.enums.ContentFit getPlaceholderContentFit$expo_image_release() {
        return null;
    }
    
    public final void setPlaceholderContentFit$expo_image_release(@org.jetbrains.annotations.NotNull
    expo.modules.image.enums.ContentFit value) {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.records.ContentPosition getContentPosition$expo_image_release() {
        return null;
    }
    
    public final void setContentPosition$expo_image_release(@org.jetbrains.annotations.NotNull
    expo.modules.image.records.ContentPosition value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getBorderStyle$expo_image_release() {
        return null;
    }
    
    public final void setBorderStyle$expo_image_release(@org.jetbrains.annotations.Nullable
    java.lang.String value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.Integer getBackgroundColor$expo_image_release() {
        return null;
    }
    
    public final void setBackgroundColor$expo_image_release(@org.jetbrains.annotations.Nullable
    java.lang.Integer value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.Integer getTintColor$expo_image_release() {
        return null;
    }
    
    public final void setTintColor$expo_image_release(@org.jetbrains.annotations.Nullable
    java.lang.Integer value) {
    }
    
    public final boolean isFocusableProp$expo_image_release() {
        return false;
    }
    
    public final void setFocusableProp$expo_image_release(boolean value) {
    }
    
    public final boolean getAccessible$expo_image_release() {
        return false;
    }
    
    public final void setAccessible$expo_image_release(boolean value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getAccessibilityLabel$expo_image_release() {
        return null;
    }
    
    public final void setAccessibilityLabel$expo_image_release(@org.jetbrains.annotations.Nullable
    java.lang.String value) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getRecyclingKey() {
        return null;
    }
    
    public final void setRecyclingKey(@org.jetbrains.annotations.Nullable
    java.lang.String value) {
    }
    
    public final boolean getAllowDownscaling$expo_image_release() {
        return false;
    }
    
    public final void setAllowDownscaling$expo_image_release(boolean value) {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.enums.Priority getPriority$expo_image_release() {
        return null;
    }
    
    public final void setPriority$expo_image_release(@org.jetbrains.annotations.NotNull
    expo.modules.image.enums.Priority p0) {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.records.CachePolicy getCachePolicy$expo_image_release() {
        return null;
    }
    
    public final void setCachePolicy$expo_image_release(@org.jetbrains.annotations.NotNull
    expo.modules.image.records.CachePolicy p0) {
    }
    
    public final void setBorderRadius(int index, float radius) {
    }
    
    public final void setBorderWidth(int index, float width) {
    }
    
    public final void setBorderColor(int index, float rgb, float alpha) {
    }
    
    /**
     * Copies saved props to the provided view.
     * It ensures that the view state is up to date.
     */
    private final void copyProps(expo.modules.image.ExpoImageView view) {
    }
    
    /**
     * Allows `isScreenReaderFocusable` to be set on apis below level 28
     */
    private final void setIsScreenReaderFocusable(android.view.View view, boolean value) {
    }
    
    /**
     * When a new resource is available, this method tries to handle it.
     * It decides where provided bitmap should be displayed and clears the previous target/image.
     */
    public final boolean onResourceReady(@org.jetbrains.annotations.NotNull
    expo.modules.image.ImageViewWrapperTarget target, @org.jetbrains.annotations.NotNull
    android.graphics.drawable.Drawable resource, boolean isPlaceholder) {
        return false;
    }
    
    private final void configureView(expo.modules.image.ExpoImageView view, expo.modules.image.ImageViewWrapperTarget target, android.graphics.drawable.Drawable resource, boolean isPlaceholder) {
    }
    
    private final expo.modules.image.records.SourceMap getBestSource(java.util.List<expo.modules.image.records.SourceMap> sources) {
        return null;
    }
    
    @java.lang.Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
    }
    
    private final com.bumptech.glide.request.RequestOptions createPropOptions() {
        return null;
    }
    
    public final void onViewDestroys() {
    }
    
    public final void rerenderIfNeeded$expo_image_release(boolean shouldRerenderBecauseOfResize) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000$\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u0010\u0010\n\u001a\u00020\t2\u0006\u0010\u000b\u001a\u00020\u0005H\u0002J\u0016\u0010\f\u001a\u00020\t2\u0006\u0010\r\u001a\u00020\u00072\u0006\u0010\u000b\u001a\u00020\u0005R\u0016\u0010\u0003\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00050\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0006\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00070\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\b\u001a\u0004\u0018\u00010\tX\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u000e"}, d2 = {"Lexpo/modules/image/ExpoImageViewWrapper$Companion;", "", "()V", "activityRef", "Ljava/lang/ref/WeakReference;", "Landroid/app/Activity;", "appContextRef", "Lexpo/modules/kotlin/AppContext;", "requestManager", "Lcom/bumptech/glide/RequestManager;", "createNewRequestManager", "activity", "getOrCreateRequestManager", "appContext", "expo-image_release"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        @org.jetbrains.annotations.NotNull
        public final com.bumptech.glide.RequestManager getOrCreateRequestManager(@org.jetbrains.annotations.NotNull
        expo.modules.kotlin.AppContext appContext, @org.jetbrains.annotations.NotNull
        android.app.Activity activity) {
            return null;
        }
        
        private final com.bumptech.glide.RequestManager createNewRequestManager(android.app.Activity activity) {
            return null;
        }
    }
}