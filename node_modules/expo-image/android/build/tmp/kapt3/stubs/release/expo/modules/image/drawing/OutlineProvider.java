package expo.modules.image.drawing;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000f\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0014\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0007\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\b\u0018\u00002\u00020\u0001:\u0002./B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\u0016\u0010\u0013\u001a\u00020\u00142\u0006\u0010\u0015\u001a\u00020\u00162\u0006\u0010\u0017\u001a\u00020\u0018J\u0018\u0010\u0019\u001a\u00020\u00142\u0006\u0010\u0017\u001a\u00020\u00182\u0006\u0010\u001a\u001a\u00020\u001bH\u0016J\u0006\u0010\u001c\u001a\u00020\u000eJ\u0016\u0010\u001d\u001a\u00020\u000e2\u0006\u0010\u001e\u001a\u00020\u001f2\u0006\u0010 \u001a\u00020\u0012J\u0010\u0010!\u001a\u00020\u00142\u0006\u0010\u0017\u001a\u00020\u0018H\u0002J\b\u0010\"\u001a\u00020\u0014H\u0002J\b\u0010#\u001a\u00020\u0014H\u0002J@\u0010$\u001a\u00020\u00142\u0006\u0010%\u001a\u00020&2\u0006\u0010\'\u001a\u00020(2\u0006\u0010)\u001a\u00020(2\u0006\u0010*\u001a\u00020(2\u0006\u0010+\u001a\u00020(2\u0006\u0010,\u001a\u00020\u000e2\u0006\u0010-\u001a\u00020\u000eH\u0002R\u0011\u0010\u0005\u001a\u00020\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0007\u0010\bR\u000e\u0010\t\u001a\u00020\nX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000b\u001a\u00020\fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\r\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000f\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u00060"}, d2 = {"Lexpo/modules/image/drawing/OutlineProvider;", "Landroid/view/ViewOutlineProvider;", "mContext", "Landroid/content/Context;", "(Landroid/content/Context;)V", "borderRadiiConfig", "", "getBorderRadiiConfig", "()[F", "mBounds", "Landroid/graphics/RectF;", "mConvexPath", "Landroid/graphics/Path;", "mConvexPathInvalidated", "", "mCornerRadii", "mCornerRadiiInvalidated", "mLayoutDirection", "", "clipCanvasIfNeeded", "", "canvas", "Landroid/graphics/Canvas;", "view", "Landroid/view/View;", "getOutline", "outline", "Landroid/graphics/Outline;", "hasEqualCorners", "setBorderRadius", "radius", "", "position", "updateBoundsAndLayoutDirection", "updateConvexPathIfNeeded", "updateCornerRadiiIfNeeded", "updateCornerRadius", "outputPosition", "Lexpo/modules/image/drawing/OutlineProvider$CornerRadius;", "inputPosition", "Lexpo/modules/image/drawing/OutlineProvider$BorderRadiusConfig;", "oppositePosition", "startPosition", "endPosition", "isRTL", "isRTLSwap", "BorderRadiusConfig", "CornerRadius", "expo-image_release"})
public final class OutlineProvider extends android.view.ViewOutlineProvider {
    private final android.content.Context mContext = null;
    private int mLayoutDirection = android.view.View.LAYOUT_DIRECTION_LTR;
    private final android.graphics.RectF mBounds = null;
    @org.jetbrains.annotations.NotNull
    private final float[] borderRadiiConfig = null;
    private final float[] mCornerRadii = null;
    private boolean mCornerRadiiInvalidated = true;
    private final android.graphics.Path mConvexPath = null;
    private boolean mConvexPathInvalidated = true;
    
    public OutlineProvider(@org.jetbrains.annotations.NotNull
    android.content.Context mContext) {
        super();
    }
    
    @org.jetbrains.annotations.NotNull
    public final float[] getBorderRadiiConfig() {
        return null;
    }
    
    private final void updateCornerRadiiIfNeeded() {
    }
    
    private final void updateCornerRadius(expo.modules.image.drawing.OutlineProvider.CornerRadius outputPosition, expo.modules.image.drawing.OutlineProvider.BorderRadiusConfig inputPosition, expo.modules.image.drawing.OutlineProvider.BorderRadiusConfig oppositePosition, expo.modules.image.drawing.OutlineProvider.BorderRadiusConfig startPosition, expo.modules.image.drawing.OutlineProvider.BorderRadiusConfig endPosition, boolean isRTL, boolean isRTLSwap) {
    }
    
    private final void updateConvexPathIfNeeded() {
    }
    
    public final boolean hasEqualCorners() {
        return false;
    }
    
    public final boolean setBorderRadius(float radius, int position) {
        return false;
    }
    
    private final void updateBoundsAndLayoutDirection(android.view.View view) {
    }
    
    @java.lang.Override
    public void getOutline(@org.jetbrains.annotations.NotNull
    android.view.View view, @org.jetbrains.annotations.NotNull
    android.graphics.Outline outline) {
    }
    
    public final void clipCanvasIfNeeded(@org.jetbrains.annotations.NotNull
    android.graphics.Canvas canvas, @org.jetbrains.annotations.NotNull
    android.view.View view) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u000b\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006j\u0002\b\u0007j\u0002\b\bj\u0002\b\tj\u0002\b\nj\u0002\b\u000b\u00a8\u0006\f"}, d2 = {"Lexpo/modules/image/drawing/OutlineProvider$BorderRadiusConfig;", "", "(Ljava/lang/String;I)V", "ALL", "TOP_LEFT", "TOP_RIGHT", "BOTTOM_RIGHT", "BOTTOM_LEFT", "TOP_START", "TOP_END", "BOTTOM_START", "BOTTOM_END", "expo-image_release"})
    public static enum BorderRadiusConfig {
        /*public static final*/ ALL /* = new ALL() */,
        /*public static final*/ TOP_LEFT /* = new TOP_LEFT() */,
        /*public static final*/ TOP_RIGHT /* = new TOP_RIGHT() */,
        /*public static final*/ BOTTOM_RIGHT /* = new BOTTOM_RIGHT() */,
        /*public static final*/ BOTTOM_LEFT /* = new BOTTOM_LEFT() */,
        /*public static final*/ TOP_START /* = new TOP_START() */,
        /*public static final*/ TOP_END /* = new TOP_END() */,
        /*public static final*/ BOTTOM_START /* = new BOTTOM_START() */,
        /*public static final*/ BOTTOM_END /* = new BOTTOM_END() */;
        
        BorderRadiusConfig() {
        }
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0006\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006\u00a8\u0006\u0007"}, d2 = {"Lexpo/modules/image/drawing/OutlineProvider$CornerRadius;", "", "(Ljava/lang/String;I)V", "TOP_LEFT", "TOP_RIGHT", "BOTTOM_RIGHT", "BOTTOM_LEFT", "expo-image_release"})
    public static enum CornerRadius {
        /*public static final*/ TOP_LEFT /* = new TOP_LEFT() */,
        /*public static final*/ TOP_RIGHT /* = new TOP_RIGHT() */,
        /*public static final*/ BOTTOM_RIGHT /* = new BOTTOM_RIGHT() */,
        /*public static final*/ BOTTOM_LEFT /* = new BOTTOM_LEFT() */;
        
        CornerRadius() {
        }
    }
}