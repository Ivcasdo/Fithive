package expo.modules.image.okhttp;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u00008\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\u0018\u00002\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00030\u0001:\u0001\u0011B\r\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\u0002\u0010\u0006J0\u0010\u0007\u001a\n\u0012\u0004\u0012\u00020\u0003\u0018\u00010\b2\u0006\u0010\t\u001a\u00020\u00022\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\f\u001a\u00020\u000b2\u0006\u0010\r\u001a\u00020\u000eH\u0016J\u0010\u0010\u000f\u001a\u00020\u00102\u0006\u0010\t\u001a\u00020\u0002H\u0016R\u000e\u0010\u0004\u001a\u00020\u0005X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0012"}, d2 = {"Lexpo/modules/image/okhttp/GlideUrlWrapperLoader;", "Lcom/bumptech/glide/load/model/ModelLoader;", "Lexpo/modules/image/okhttp/GlideUrlWrapper;", "Ljava/io/InputStream;", "commonClient", "Lokhttp3/OkHttpClient;", "(Lokhttp3/OkHttpClient;)V", "buildLoadData", "Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "model", "width", "", "height", "options", "Lcom/bumptech/glide/load/Options;", "handles", "", "Factory", "expo-image_release"})
public final class GlideUrlWrapperLoader implements com.bumptech.glide.load.model.ModelLoader<expo.modules.image.okhttp.GlideUrlWrapper, java.io.InputStream> {
    private final okhttp3.OkHttpClient commonClient = null;
    
    public GlideUrlWrapperLoader(@org.jetbrains.annotations.NotNull
    okhttp3.OkHttpClient commonClient) {
        super();
    }
    
    @org.jetbrains.annotations.Nullable
    @java.lang.Override
    public com.bumptech.glide.load.model.ModelLoader.LoadData<java.io.InputStream> buildLoadData(@org.jetbrains.annotations.NotNull
    expo.modules.image.okhttp.GlideUrlWrapper model, int width, int height, @org.jetbrains.annotations.NotNull
    com.bumptech.glide.load.Options options) {
        return null;
    }
    
    @java.lang.Override
    public boolean handles(@org.jetbrains.annotations.NotNull
    expo.modules.image.okhttp.GlideUrlWrapper model) {
        return false;
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000,\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\u0018\u00002\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00030\u0001B\r\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\u0002\u0010\u0006J\u001c\u0010\u0007\u001a\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00030\b2\u0006\u0010\t\u001a\u00020\nH\u0016J\b\u0010\u000b\u001a\u00020\fH\u0016R\u000e\u0010\u0004\u001a\u00020\u0005X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\r"}, d2 = {"Lexpo/modules/image/okhttp/GlideUrlWrapperLoader$Factory;", "Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "Lexpo/modules/image/okhttp/GlideUrlWrapper;", "Ljava/io/InputStream;", "commonClient", "Lokhttp3/OkHttpClient;", "(Lokhttp3/OkHttpClient;)V", "build", "Lcom/bumptech/glide/load/model/ModelLoader;", "multiFactory", "Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;", "teardown", "", "expo-image_release"})
    public static final class Factory implements com.bumptech.glide.load.model.ModelLoaderFactory<expo.modules.image.okhttp.GlideUrlWrapper, java.io.InputStream> {
        private final okhttp3.OkHttpClient commonClient = null;
        
        public Factory(@org.jetbrains.annotations.NotNull
        okhttp3.OkHttpClient commonClient) {
            super();
        }
        
        @org.jetbrains.annotations.NotNull
        @java.lang.Override
        public com.bumptech.glide.load.model.ModelLoader<expo.modules.image.okhttp.GlideUrlWrapper, java.io.InputStream> build(@org.jetbrains.annotations.NotNull
        com.bumptech.glide.load.model.MultiModelLoaderFactory multiFactory) {
            return null;
        }
        
        @java.lang.Override
        public void teardown() {
        }
    }
}