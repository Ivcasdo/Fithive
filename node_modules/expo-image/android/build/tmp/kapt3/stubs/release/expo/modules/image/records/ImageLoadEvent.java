package expo.modules.image.records;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000,\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0010\u000b\n\u0000\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\b\n\u0002\b\u0002\b\u0086\b\u0018\u00002\u00020\u0001B\u0015\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\u0002\u0010\u0006J\t\u0010\u000e\u001a\u00020\u0003H\u00c6\u0003J\t\u0010\u000f\u001a\u00020\u0005H\u00c6\u0003J\u001d\u0010\u0010\u001a\u00020\u00002\b\b\u0002\u0010\u0002\u001a\u00020\u00032\b\b\u0002\u0010\u0004\u001a\u00020\u0005H\u00c6\u0001J\u0013\u0010\u0011\u001a\u00020\u00122\b\u0010\u0013\u001a\u0004\u0018\u00010\u0014H\u00d6\u0003J\t\u0010\u0015\u001a\u00020\u0016H\u00d6\u0001J\t\u0010\u0017\u001a\u00020\u0003H\u00d6\u0001R\u001c\u0010\u0002\u001a\u00020\u00038\u0006X\u0087\u0004\u00a2\u0006\u000e\n\u0000\u0012\u0004\b\u0007\u0010\b\u001a\u0004\b\t\u0010\nR\u001c\u0010\u0004\u001a\u00020\u00058\u0006X\u0087\u0004\u00a2\u0006\u000e\n\u0000\u0012\u0004\b\u000b\u0010\b\u001a\u0004\b\f\u0010\r\u00a8\u0006\u0018"}, d2 = {"Lexpo/modules/image/records/ImageLoadEvent;", "Lexpo/modules/kotlin/records/Record;", "cacheType", "", "source", "Lexpo/modules/image/records/ImageSource;", "(Ljava/lang/String;Lexpo/modules/image/records/ImageSource;)V", "getCacheType$annotations", "()V", "getCacheType", "()Ljava/lang/String;", "getSource$annotations", "getSource", "()Lexpo/modules/image/records/ImageSource;", "component1", "component2", "copy", "equals", "", "other", "", "hashCode", "", "toString", "expo-image_release"})
public final class ImageLoadEvent implements expo.modules.kotlin.records.Record {
    @org.jetbrains.annotations.NotNull
    private final java.lang.String cacheType = null;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.image.records.ImageSource source = null;
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.records.ImageLoadEvent copy(@org.jetbrains.annotations.NotNull
    java.lang.String cacheType, @org.jetbrains.annotations.NotNull
    expo.modules.image.records.ImageSource source) {
        return null;
    }
    
    @java.lang.Override
    public boolean equals(@org.jetbrains.annotations.Nullable
    java.lang.Object other) {
        return false;
    }
    
    @java.lang.Override
    public int hashCode() {
        return 0;
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.lang.String toString() {
        return null;
    }
    
    public ImageLoadEvent(@org.jetbrains.annotations.NotNull
    java.lang.String cacheType, @org.jetbrains.annotations.NotNull
    expo.modules.image.records.ImageSource source) {
        super();
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String component1() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String getCacheType() {
        return null;
    }
    
    @expo.modules.kotlin.records.Field
    @java.lang.Deprecated
    public static void getCacheType$annotations() {
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.records.ImageSource component2() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.image.records.ImageSource getSource() {
        return null;
    }
    
    @expo.modules.kotlin.records.Field
    @java.lang.Deprecated
    public static void getSource$annotations() {
    }
}