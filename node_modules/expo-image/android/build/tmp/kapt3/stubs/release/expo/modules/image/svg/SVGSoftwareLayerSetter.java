package expo.modules.image.svg;

import java.lang.System;

/**
 * Listener which updates the [ImageView] to be software rendered, because [ ]/[android.graphics.Picture] can't render on a
 * hardware backed [Canvas][android.graphics.Canvas].
 *
 * Copied from https://github.com/bumptech/glide/blob/10acc31a16b4c1b5684f69e8de3117371dfa77a8/samples/svg/src/main/java/com/bumptech/glide/samples/svg/SvgSoftwareLayerSetter.java
 * and rewritten to Kotlin.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u00006\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\u0018\u00002\b\u0012\u0004\u0012\u00020\u00020\u0001B\u0011\b\u0007\u0012\b\b\u0002\u0010\u0003\u001a\u00020\u0004\u00a2\u0006\u0002\u0010\u0005J\u0018\u0010\u0006\u001a\u0004\u0018\u00010\u00072\f\u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00020\tH\u0002J2\u0010\n\u001a\u00020\u000b2\b\u0010\f\u001a\u0004\u0018\u00010\r2\b\u0010\u000e\u001a\u0004\u0018\u00010\u00022\f\u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00020\t2\u0006\u0010\u000f\u001a\u00020\u000bH\u0016J6\u0010\u0010\u001a\u00020\u000b2\u0006\u0010\u0011\u001a\u00020\u00022\u0006\u0010\u000e\u001a\u00020\u00022\f\u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00020\t2\u0006\u0010\u0012\u001a\u00020\u00132\u0006\u0010\u000f\u001a\u00020\u000bH\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0014"}, d2 = {"Lexpo/modules/image/svg/SVGSoftwareLayerSetter;", "Lcom/bumptech/glide/request/RequestListener;", "", "mDefaultLayerType", "", "(I)V", "getViewOfTarget", "Landroid/widget/ImageView;", "target", "Lcom/bumptech/glide/request/target/Target;", "onLoadFailed", "", "e", "Lcom/bumptech/glide/load/engine/GlideException;", "model", "isFirstResource", "onResourceReady", "resource", "dataSource", "Lcom/bumptech/glide/load/DataSource;", "expo-image_release"})
public final class SVGSoftwareLayerSetter implements com.bumptech.glide.request.RequestListener<java.lang.Object> {
    private final int mDefaultLayerType = 0;
    
    @kotlin.jvm.JvmOverloads
    public SVGSoftwareLayerSetter() {
        super();
    }
    
    @kotlin.jvm.JvmOverloads
    public SVGSoftwareLayerSetter(int mDefaultLayerType) {
        super();
    }
    
    @java.lang.Override
    public boolean onLoadFailed(@org.jetbrains.annotations.Nullable
    com.bumptech.glide.load.engine.GlideException e, @org.jetbrains.annotations.Nullable
    java.lang.Object model, @org.jetbrains.annotations.NotNull
    com.bumptech.glide.request.target.Target<java.lang.Object> target, boolean isFirstResource) {
        return false;
    }
    
    @java.lang.Override
    public boolean onResourceReady(@org.jetbrains.annotations.NotNull
    java.lang.Object resource, @org.jetbrains.annotations.NotNull
    java.lang.Object model, @org.jetbrains.annotations.NotNull
    com.bumptech.glide.request.target.Target<java.lang.Object> target, @org.jetbrains.annotations.NotNull
    com.bumptech.glide.load.DataSource dataSource, boolean isFirstResource) {
        return false;
    }
    
    private final android.widget.ImageView getViewOfTarget(com.bumptech.glide.request.target.Target<java.lang.Object> target) {
        return null;
    }
}